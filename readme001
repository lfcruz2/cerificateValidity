
```python
# app/utils/csv_processor.py

import io
import pandas as pd

def process_csv(file_contents: bytes) -> pd.DataFrame:
    """
    Processes CSV file contents:
    - Decodes the file contents.
    - Reads CSV data into a Pandas DataFrame.
    - Drops columns that are completely empty (all NaN or only empty strings).
    
    Returns:
        pd.DataFrame: The cleaned DataFrame.
    """
    # Decode the file contents into a string
    csv_str = file_contents.decode("utf-8")
    
    # Read the CSV data into a DataFrame
    df = pd.read_csv(io.StringIO(csv_str))
    
    # Drop columns that are entirely NaN
    df.dropna(axis=1, how='all', inplace=True)
    
    # Drop columns that contain only empty strings
    df = df.loc[:, df.apply(lambda col: col.astype(str).str.strip().replace("", pd.NA).notna().any())]
    
    return df

def categorize_column(series: pd.Series) -> str:
    """
    Categorizes a pandas Series based on its contents.
    
    Attempts to convert the series to numeric; if successful, returns "numeric".
    If not, attempts to convert to datetime; if successful, returns "time".
    Otherwise, returns "text".
    
    Args:
        series (pd.Series): The data column to categorize.
    
    Returns:
        str: The category of the column ("numeric", "time", or "text").
    """
    try:
        pd.to_numeric(series.dropna())
        return "numeric"
    except Exception:
        pass
    try:
        pd.to_datetime(series.dropna())
        return "time"
    except Exception:
        pass
    return "text"
```
